(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{198:function(t,_,s){},219:function(t,_,s){"use strict";s(198)},245:function(t,_,s){"use strict";s.r(_);s(219);var v=s(0),a=Object(v.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,_=t.$createElement,s=t._self._c||_;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"网络高频面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络高频面试题"}},[t._v("#")]),t._v(" 网络高频面试题")]),t._v(" "),s("h2",{attrs:{id:"_1-常见的状态码有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-常见的状态码有哪些"}},[t._v("#")]),t._v(" 1. 常见的状态码有哪些")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("2xx:表示成功"),s("br"),t._v("\n200 OK 表示所有东西都正常"),s("br"),t._v("\n204 表示请求成功,但是服务端没有内容给你"),s("br"),t._v("\n3xx: 表示重定向")]),t._v(" "),s("ul",[s("li",[t._v("301 永久重定向(当访问一个永久重定向的网站的时候,一个域名被指向一个其他网站,且是 永久的)")]),t._v(" "),s("li",[t._v("302 临时重定向")])]),t._v(" "),s("p",[t._v("304 走缓存(服务端觉得你之前请求过这个东西,而且服务器上的那一份没有发生变化,告诉 客户端用缓存 就行)"),s("br"),t._v("\n301，Moved Permanently。永久重定向，该操作比较危险，需要谨慎操作："),s("br"),t._v("\n如果设置了301，但是一段时间后又想取消，但是浏览器中已经有了缓存，还是会重定向 。")]),t._v(" "),s("ul",[s("li",[t._v("302，Fount。临时重定向，但是会在重定向的时候改变 method: 把 POST 改成 GET，于是有了 307")]),t._v(" "),s("li",[t._v("307，Temporary Redirect。临时重定向，在重定向时不会改变 method")])]),t._v(" "),s("p",[t._v("4xx: 表示客户端错误"),s("br"),t._v("\n400 参数传递不当,导致的错误"),s("br"),t._v("\n401 权限不够导致的"),s("br"),t._v("\n403 服务端已经理解请求,但是拒绝响应"),s("br"),t._v("\n404 客户端请求的资源或者数据不存在(发现请求接口404,有两种情况一种是咱们写错接口了或者服务端还没部署)"),s("br"),t._v("\n5xx: 表示服务端错误(遇到以5开头的错误去找服务端错误)"),s("br"),t._v("\n500 服务端内部错误"),s("br"),t._v("\n502 网关错误")])]),t._v(" "),s("h2",{attrs:{id:"_2-三次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-三次握手"}},[t._v("#")]),t._v(" 2. 三次握手")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("三次握手")]),t._v(" "),s("p",[t._v("第一次握手：客户端向服务端发送SYN码数据包，表示客户端要求和服务端建立连接；"),s("br"),t._v("\n第二次握手：服务端收到客户端的连接请求后，会发送ACK数据包给客户端，表示客户端是否真的需要建立连接；"),s("br"),t._v("\n第三次握手：客户端收到ACK码以后会检验是否正确，如果正确，客户端会再次发送ACK码给服务端，表示确认建立连接；"),s("br"),t._v("\n(三次握手都成功以后才会建立连接，然后才会发送数据；)")])]),t._v(" "),s("h2",{attrs:{id:"_3-四次挥手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-四次挥手"}},[t._v("#")]),t._v(" 3. 四次挥手")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("四次挥手")]),t._v(" "),s("p",[t._v("第一次挥手：当客户端发送数据结束后，会发送FIN码数据包给服务端，表示告知服务端客 户端的数据已经传递完了。"),s("br"),t._v("\n第二次挥手：服务端收到FIN码后，会发送ACK码给客户端，表示服务端已经知道客户端传完了。客户端收到ACK以后就会把传递数据给服务端的通道关闭；"),s("br"),t._v("\n第三次挥手：服务端把响应的数据发送完毕后，会发送一个FIN给客户端，告知客户端响 应的数据已经发送完毕；"),s("br"),t._v("\n第四次挥手：客户端收到FIN后，会发送一个ACK码数据包给服务端，告知服务端客户端已 经知道数据发送完毕；服务端收到ACK码后，可以安心的把数据传递通道关闭掉。")])]),t._v(" "),s("h2",{attrs:{id:"_4-什么是-tcp-协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-什么是-tcp-协议"}},[t._v("#")]),t._v(" 4. 什么是 TCP 协议")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TCP 协议")]),t._v(" "),s("p",[t._v("全称是传输控制协议是一种面向连接的、可靠的、基于字节流的传输层通信协议")])]),t._v(" "),s("h2",{attrs:{id:"_5-为什么-tcp-连接需要3次握手，而不是两次"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-为什么-tcp-连接需要3次握手，而不是两次"}},[t._v("#")]),t._v(" 5. 为什么 TCP 连接需要3次握手，而不是两次?")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("为了防止出现失效的连接请求报文段被服务端接收的情况，从而产生错误。")])]),t._v(" "),s("h2",{attrs:{id:"_6-为何客户端最后还等待2msl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-为何客户端最后还等待2msl"}},[t._v("#")]),t._v(" 6. 为何客户端最后还等待2MSL")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("客户端需要保证最后一次发送的 ACK 报文到服务器，如果服务器未收到，可以请求客户端重发，这样客户端还有时间再发，重启 2MSL 计时")])]),t._v(" "),s("h2",{attrs:{id:"_7-从输入url到页面展示，发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-从输入url到页面展示，发生了什么"}},[t._v("#")]),t._v(" 7. 从输入URL到页面展示，发生了什么?")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("步骤")]),t._v(" "),s("ol",[s("li",[t._v("浏览器根据URL进行DNS查询")]),t._v(" "),s("li",[t._v("首先从DNS缓存中查询")]),t._v(" "),s("li",[t._v("若未在缓存中找到，则不停的向上一级级请求DNS服务器")]),t._v(" "),s("li",[t._v("取得IP地址，建立TCP连接")]),t._v(" "),s("li",[t._v("构造HTTP请求报")]),t._v(" "),s("li",[t._v("添加一些HTTP首部")]),t._v(" "),s("li",[t._v("根据同源策略添加cookie")]),t._v(" "),s("li",[t._v("在TCP连接上发送HTTP报文，等待响应")]),t._v(" "),s("li",[t._v("服务器处理HTTP请求报文，返回响应HTTP响应报文")]),t._v(" "),s("li",[t._v("浏览器处理服务器返回的HTTP响应报文，若为HTML则渲染页面，不包括脚本的简单渲染流程如下")])]),t._v(" "),s("ul",[s("li",[s("ol",[s("li",[t._v("解析DOM、CSSOM")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("根据DOM、CSSOM计算render tree")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"3"}},[s("li",[t._v("根据render tree进行layout")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"4"}},[s("li",[t._v("paint，至此，用户可以看到页面了")])])])])])])}],!1,null,null,null);_.default=a.exports}}]);